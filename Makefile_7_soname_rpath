# Makefile with soname and symbolic links
# Makefile with rpath for build and install

$ ls
bar  foo  main1  main2  Makefile
$

$ find . | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
.
|____foo
| |____Makefile
| |____foo.c
| |____foo.h
|____main1
| |____main1.c
| |____Makefile
|____Makefile
|____bar
| |____bar.c
| |____Makefile
| |____bar.h
|____main2
| |____main2.c
| |____Makefile
$

$ cat Makefile

SUBDIRS = bar foo main1 main2

all : $(SUBDIRS)
foo : bar
main1 : foo
main2 : foo
install : $(SUBDIRS)

define make_so_with_versions # version soversion
	$(MAKE) -C $@ soversion=lib$@.so.$(2)
	cp $@/$@ $@/lib$@.so.$(1)
	cd $@; ln -f -s lib$@.so.$(1) lib$@.so.$(2); cd ..
	cd $@; ln -f -s lib$@.so.$(1) lib$@.so; cd ..
endef

bar :
	$(call make_so_with_versions,1.2.3,1.2) #,version,soversion
foo :
	$(call make_so_with_versions,99.1890.70,99.1890) #,version,soversion

main1 :
	$(MAKE) -C $@
main2 :
	$(MAKE) -C $@

# make DESTDIR=~/myproject install
install :
	install -d "$(DESTDIR)/usr/local/bin"
	install -d "$(DESTDIR)/usr/local/lib"
	install -m755 main1/main1 "$(DESTDIR)/usr/local/bin"
	install -m755 main2/main2 "$(DESTDIR)/usr/local/bin"
	install -m755 bar/*.so bar/*.so.* "$(DESTDIR)/usr/local/lib"
	install -m755 foo/*.so foo/*.so.* "$(DESTDIR)/usr/local/lib"

clean :
	for dir in $(SUBDIRS); do \
		$(MAKE) -C $$dir $@; \
	done
.PHONY : $(SUBDIRS) all clean install

$

$ cat main1/Makefile
# build shared library with -fPIC, -shared
CFLAGS   = -g # -O3 -fPIC # CXXFLAGS for .cpp
CPPFLAGS = -MMD -MP -I../foo
LDFLAGS  = -L../foo -Wl,-rpath,'$$ORIGIN/../foo' # -shared
LDLIBS   = -lfoo
#CC      = $(CXX) # link with CXX for .cpp

LDFLAGS += -Wl,-rpath,'$$ORIGIN/../lib'

# target name is basename of one of the source files
main1 : $(patsubst %.c,%.o,$(wildcard *.c)) # .cpp
-include $(wildcard *.d)
clean : ; -rm -fr *.o *.d main1
.PHONY : clean
$

$ cat main2/Makefile
# build shared library with -fPIC, -shared
CFLAGS   = -g # -O3 -fPIC # CXXFLAGS for .cpp
CPPFLAGS = -MMD -MP -I../foo
LDFLAGS  = -L../foo -Wl,-rpath,'$$ORIGIN/../foo' # -shared
LDLIBS   = -lfoo
#CC      = $(CXX) # link with CXX for .cpp

LDFLAGS += -Wl,-rpath,'$$ORIGIN/../lib'

# target name is basename of one of the source files
main2 : $(patsubst %.c,%.o,$(wildcard *.c)) # .cpp
-include $(wildcard *.d)
clean : ; -rm -fr *.o *.d main2
.PHONY : clean
$

$ cat foo/Makefile
# build shared library with -fPIC, -shared
CFLAGS   = -g -fPIC # -O3 # CXXFLAGS for .cpp
CPPFLAGS = -MMD -MP -I../bar
LDFLAGS  = -shared -L../bar -Wl,-rpath,'$$ORIGIN/../bar'
LDLIBS   = -lbar
#CC      = $(CXX) # link with CXX for .cpp

LDFLAGS += -Wl,-rpath,'$$ORIGIN/../lib'
LDFLAGS += -Wl,-soname,$(soversion)

# target name is basename of one of the source files
foo : $(patsubst %.c,%.o,$(wildcard *.c)) # .cpp
-include $(wildcard *.d)
clean : ; -rm -fr *.o *.d foo *.so *.so.*
.PHONY : clean
$

$ cat bar/Makefile
# build shared library with -fPIC, -shared
CFLAGS   = -g -fPIC # -O3 # CXXFLAGS for .cpp
CPPFLAGS = -MMD -MP # -I../foo
LDFLAGS  = -shared # -L../foo -Wl,-rpath,'$$ORIGIN/../foo' #
LDLIBS   = # -lfoo
#CC      = $(CXX) # link with CXX for .cpp

LDFLAGS += -Wl,-soname,$(soversion)

# target name is basename of one of the source files
bar : $(patsubst %.c,%.o,$(wildcard *.c)) # .cpp
-include $(wildcard *.d)
clean : ; -rm -fr *.o *.d bar *.so *.so.*
.PHONY : clean
$
